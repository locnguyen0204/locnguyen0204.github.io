{"version":3,"sources":["components/Header.js","components/Todo.js","components/TodoList.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","memo","props","useState","text","setText","addTodo","isCheckedAll","className","value","onChange","e","target","onKeyPress","key","id","Math","floor","random","isCompleted","onAddTodo","checked","Todo","removeTodo","todo","getTodoEditingId","todoEditingId","onEditTodo","index","markCompleted","markImportant","isEditing","editTodo","type","onBlur","onDoubleClick","onClick","isImportant","TodoList","todosList","checkAllTodos","htmlFor","map","Footer","clearCompleted","status","setStatusFilter","numOfTodosLeft","numOfTodosCompleted","numOfTodos","filterBtns","title","isActived","link","btn","FilterBtn","href","isNotCheckedAll","todos","find","filterByStatus","filter","App","state","setState","preState","list","splice","updatedList","this","length","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a7e3894.chunk.js","sourcesContent":["import React, { memo, useState } from 'react';\r\n\r\n\r\nconst Header = memo(props => {\r\n    const [text, setText] = useState('')\r\n    const { addTodo, isCheckedAll } = props\r\n    const onAddTodo = (e = {}) => {\r\n        if (e.key === 'Enter' && text) {\r\n            addTodo({\r\n                id: Math.floor(Math.random() * 10000),\r\n                text,\r\n                isCompleted: false\r\n            })\r\n            setText('')\r\n        }\r\n    }\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Task</h1>\r\n            <input className=\"new-todo\" value={text} onChange={(e) => setText(e.target.value)} onKeyPress={(e) => onAddTodo(e)} checked={isCheckedAll} />\r\n        </header>\r\n    )\r\n})\r\nexport default Header","import React, { memo, useState } from 'react';\r\n\r\nconst Todo = memo(props => {\r\n    const { removeTodo, todo, getTodoEditingId, todoEditingId, onEditTodo, index, markCompleted, markImportant } = props\r\n    const [text, setText] = useState(todo.text)\r\n    const isEditing = todoEditingId === todo.id\r\n    const editTodo = () => {\r\n        onEditTodo({\r\n            ...todo,\r\n            text\r\n        }, index)\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''} ${todo.text === '' ? 'blank' : ''}`}>\r\n            {!isEditing ?\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" checked={todo.isCompleted} onChange={() => markCompleted(todo.id)} />\r\n                    <label onDoubleClick={() => getTodoEditingId(todo.id)}>{todo.text}</label>\r\n                    <button className=\"destroy\" onClick={() => removeTodo(todo.id)}></button>\r\n                    <button className={`${todo.isImportant ? 'imp-display' : 'imp'}`} onClick={() => markImportant(todo.id)}  ></button>\r\n                </div> :\r\n                <input className=\"edit\" type=\"text\" value={text} onChange={e => setText(e.target.value)} onBlur={editTodo} onKeyPress={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        editTodo()\r\n                    }\r\n                }} />\r\n            }\r\n        </li>\r\n\r\n    )\r\n})\r\n\r\nexport default Todo","import React, { memo } from 'react';\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = memo(props => {\r\n    const { todosList, checkAllTodos, isCheckedAll } = props\r\n    return (\r\n        <section className=\"main\">\r\n            <input className=\"toggle-all\" type=\"checkbox\" checked={isCheckedAll} />\r\n            <label htmlFor=\"toggle-all\" onClick={checkAllTodos}></label>\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    todosList.map((todo, index) => <Todo key={`todo${todo.id}`} {...{ todo }}  {...props} index={index} />)\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default TodoList","import React, { memo } from 'react';\r\n\r\nconst Footer = memo(props => {\r\n    const { clearCompleted, status, setStatusFilter, numOfTodosLeft, numOfTodos, numOfTodosCompleted } = props\r\n    const base = 0\r\n    const filterBtns = [{\r\n        title: 'Tất cả',\r\n        isActived: status === 'ALL',\r\n        onClick: () => setStatusFilter('ALL'),\r\n        link: ''\r\n\r\n    },\r\n    {\r\n        title: 'Chưa hoàn thành',\r\n        isActived: status === 'ACTIVE',\r\n        onClick: () => setStatusFilter('ACTIVE'),\r\n        link: '/active'\r\n\r\n    },\r\n    {\r\n        title: 'Đã hoàn thành',\r\n        isActived: status === 'COMPLETED',\r\n        onClick: () => setStatusFilter('COMPLETED'),\r\n        link: '/completed'\r\n\r\n    }, {\r\n        title: 'Quan trọng',\r\n        isActived: status === 'IMPORTANT',\r\n        onClick: () => setStatusFilter('IMPORTANT'),\r\n        link: '/important'\r\n\r\n    },\r\n\r\n    ]\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\">\r\n                <strong>{numOfTodosLeft}</strong>\r\n                <span> </span>\r\n                <span>ghi </span>\r\n                <span>chú</span>\r\n            </span>\r\n            <ul className='filters'>\r\n                {\r\n                    filterBtns.map(btn => (\r\n                        <FilterBtn key={`btn${btn.title}`} {...btn} />\r\n                    ))\r\n                }\r\n            </ul>\r\n            {\r\n                numOfTodosCompleted > base && <button className=\"clear-completed\" onClick={clearCompleted}>Xóa</button>\r\n            }\r\n        </footer>\r\n    )\r\n})\r\n\r\nconst FilterBtn = memo(props => {\r\n    const { title, onClick, link, isActived } = props\r\n    return (\r\n        <>\r\n            <li>\r\n                <a\r\n                    href={`#${link}`}\r\n                    className={`${isActived ? 'selected' : ''}`}\r\n                    onClick={onClick}\r\n                >\r\n                    {title}\r\n                </a>\r\n            </li>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Footer","import './App.css';\nimport React from 'react';\nimport './css/Todo.css';\nimport Header from './components/Header'\nimport TodoList from './components/TodoList'\nimport Footer from './components/Footer'\nimport { PureComponent } from 'react';\n\n\nconst isNotCheckedAll = (todos = []) => todos.find(todo => !todo.isCompleted)\nconst filterByStatus = (todos = [], status = '', id = '') => {\n  switch (status) {\n    case 'ACTIVE':\n      return todos.filter(todo => !todo.isCompleted && todo.id !== '')\n    case 'COMPLETED':\n      return todos.filter(todo => todo.isCompleted)\n    case 'IMPORTANT':\n      return todos.filter(todo => todo.isImportant)\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== id)\n    default:\n      return todos;\n  }\n}\nclass App extends PureComponent {\n  state = {\n    todosList: [{\n      id: '',\n      text: '',\n      isCompleted: false,\n      isImportant: false\n    }],\n    todoEditingId: '',\n    isCheckedAll: false,\n    status: 'ALL'\n  }\n\n  componentWillMount() {\n    this.setState({\n      isCheckedAll: isNotCheckedAll(this.state.todosList)\n    })\n  }\n\n  addTodo = (todo = {}) => {\n    this.setState(preState => ({\n      todosList: [...preState.todosList, todo]\n    }))\n  }\n\n  getTodoEditingId = (id = '') => {\n    this.setState({ todoEditingId: id })\n  }\n\n  onEditTodo = (todo = {}, index = -1) => {\n    if (index >= 0) {\n      const { todosList: list } = this.state\n      list.splice(index, 1, todo)\n      this.setState({ todosList: list, todoEditingId: '' })\n    }\n  }\n\n  markCompleted = (id = '') => {\n    const { todosList } = this.state\n    const updatedList = todosList.map(todo => todo.id === id ? ({ ...todo, isCompleted: !todo.isCompleted }) : todo)\n\n    this.setState(preState => ({\n      todosList: updatedList,\n      isCheckedAll: !isNotCheckedAll(updatedList)\n\n    }))\n  }\n\n  markImportant = (id = '') => {\n    const { todosList } = this.state\n    const updatedList = todosList.map(todo => todo.id === id ? ({ ...todo, isImportant: !todo.isImportant }) : todo)\n\n    this.setState(preState => ({\n      todosList: updatedList,\n\n    }))\n  }\n\n  checkAllTodos = () => {\n    const { todosList, isCheckedAll } = this.state\n    this.setState(preState => ({\n      todosList: todosList.map(todo => ({ ...todo, isCompleted: !isCheckedAll })),\n      isCheckedAll: !preState.isCheckedAll\n    }))\n  }\n\n  setStatusFilter = (status = '') => {\n    this.setState({\n      status\n    })\n  }\n\n  clearCompleted = () => {\n    const { todosList } = this.state\n    this.setState({\n      todosList: filterByStatus(todosList, 'ACTIVE')\n    })\n  }\n\n  removeTodo = (id = '') => {\n    const { todosList } = this.state\n    this.setState({\n      todosList: filterByStatus(todosList, 'REMOVE', id)\n    })\n  }\n\n\n  render() {\n    const { removeTodo, todosList, todoEditingId, isCheckedAll, status, markImportant } = this.state\n    return (\n      <div className=\"todoapp\">\n        <Header addTodo={this.addTodo} isCheckedAll={isCheckedAll} />\n        <TodoList markImportant={this.markImportant} removeTodo={this.removeTodo} checkAllTodos={this.checkAllTodos} todosList={filterByStatus(todosList, status)} isCheckedAll={isCheckedAll} getTodoEditingId={this.getTodoEditingId} todoEditingId={todoEditingId} onEditTodo={this.onEditTodo} markCompleted={this.markCompleted} />\n        <Footer\n          setStatusFilter={this.setStatusFilter}\n          status={status}\n          clearCompleted={this.clearCompleted}\n          numOfTodos={todosList.length}\n          numOfTodosLeft={filterByStatus(todosList, 'ACTIVE').length}\n          numOfTodosCompleted={filterByStatus(todosList, 'COMPLETED').length}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}